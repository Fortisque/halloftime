<%= form_for(@task) do |f| %>
  <% if @task.errors.any? %>
    <div id="error_explanation" class="alert alert-danger">
      <h2><%= pluralize(@task.errors.count, "error") %> prohibited this task from being saved:</h2>

      <ul>
      <% @task.errors.full_messages.each do |msg| %>
        <%= msg %><br>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :name %><br>
    <%= f.text_field :name %>
  </div>
  <div class="field">
    <%= f.label :project_id %><br>
    <%= f.select :project_id, options_from_collection_for_select(@projects, :id, :name) %>
  </div>

  <br>

  <div class="field">
    <%= f.label :hours %>
  <div id="minutesSlider">
  <input id="taskMinutes" type="hidden" name="minutes">

  <%#= f.text_field :done, :value => true %>


  <span id="currentLabel">slider value</span>
  </div>
  <div>
  <section>
  <button type="button" class="btn btn-default" id="decrease"><span class="glyphicon glyphicon-resize-small"></span></button>
  <span id="minTimeLabel"></span>
  <span class="tooltip">test</span>
  <div id="slider"></div>
  <span id="maxTimeLabel"></span>
  <button type="button" class="btn btn-default" id="increase"><span class="glyphicon glyphicon-resize-full"></span></button>
  </section>
  </div>
  </div>
  </div>
  <br>
  <div class="actions">
    <%= f.submit nil, :class => 'btn btn-primary' %>
  </div>
  <br>
<% end %>

<script>
  function Slider(object, maxLabel, minLabel, currentLabel, decrease, increase, input) {
    this.obj = object;
    this.maxTimeLabel = maxLabel;
    this.minTimeLabel = minLabel;
    this.currentLabel = currentLabel;
    this.decrease = decrease;
    this.increase = increase;
    this.input = input;

    this.maxMinutes = 360;
    this.minMinutes = 0;

    this.obj.slider({
        value:this.maxMinutes / 2
    });

    this.minTimeLabel.text(this.minMinutes / 60 + " hr");
    this.maxTimeLabel.text(this.maxMinutes / 60 + " hr");
    this.currentLabel.text(Math.floor(this.maxMinutes / 2 / 60) + " hr " + this.maxMinutes / 2 % 60 + " min");
    this.input.val(this.maxMinutes / 2);

    this.update = update;
    function update(max) {
        if (max >= 60) {
            this.decrease.removeAttr("disabled");
            this.maxMinutes = max;
            
            this.maxTimeLabel.text(this.maxMinutes / 60 + " hr");
            if (this.obj.slider("value") > this.maxMinutes) {
                this.obj.slider("value", this.maxMinutes);
                timeSlider.currentLabel.text(Math.floor(this.obj.slider("value") / 60) + " hr " + this.obj.slider("value") % 60 + " min");
            }
            this.obj.slider({
                change: function(event,ui) {},
                min:timeSlider.minMinutes,
                max:timeSlider.maxMinutes
            }); 

            if (max == 60) {
                this.decrease.attr("disabled", "disabled");
            }
        }
        else {
            this.decrease.attr("disabled", "disabled");
        }
    }

  }

  function Cell(row, column) {
      this.row = row;
      this.column = column;
  }

  var timeSlider;

  $( document ).ready(function() {

    timeSlider = new Slider($("#slider"), $("#maxTimeLabel"), $("#minTimeLabel"), $("#currentLabel"), $("#decrease"), $("#increase"), $("#taskMinutes"));

    $("#slider").slider({
      change: function(event,ui) {},
      step: 15,
      min:timeSlider.minMinutes,
      max:timeSlider.maxMinutes,
      animate: "slow"
    }); 

    $( "#slider" ).on( "slide", function( event, ui ) {
      timeSlider.currentLabel.text(Math.floor(ui.value / 60) + " hr " + ui.value % 60 + " min");
      timeSlider.input.val(ui.value);
    } );

    $("#increase").click(function() {
      timeSlider.update(timeSlider.maxMinutes += 60);
    });

    $("#decrease").click(function() {
      timeSlider.update(timeSlider.maxMinutes -= 60);
    });
  });
</script>
